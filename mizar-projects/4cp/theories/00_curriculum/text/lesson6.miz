::Lesson 6: Registrations and Clusters (Real Patterns from MML)
::
:: Goal: Show how registrations make the type system work automatically
:: These patterns are ESSENTIAL for real Mizar development
::
:: KEY CONCEPTS:
:: 1. Conditional clusters: "if X has property A, then X has property B"
:: 2. Existential clusters: "objects with property A exist"
:: 3. Functorial clusters: "specific term has property A"

environ
 vocabularies LESSON6, XBOOLE_0;
 notations XBOOLE_0;
 constructors XBOOLE_0;
 registrations XBOOLE_0;

begin

:: PATTERN 1: Simple attribute
definition
  let X be set;
  attr X is trivial means
  :Def1:
  X = {};
end;

:: PATTERN 2: Opposite attribute
definition
  let X be set;
  attr X is nontrivial means
  :Def2:
  X <> {};
end;

:: REGISTRATION 1: Empty set is trivial
registration
  cluster {} -> trivial;
  coherence by Def1;
end;

:: REGISTRATION 2: Existential cluster - trivial sets exist
:: Without this, you CANNOT write "let X be trivial set"
registration
  cluster trivial for set;
  existence
  proof
    take {};
    thus {} is trivial;
  end;
end;

:: REGISTRATION 3: Conditional cluster showing implication
:: "trivial sets are empty"
registration
  cluster trivial -> empty for set;
  coherence
  proof
    let X be set;
    assume X is trivial;
    then X = {} by Def1;
    hence X is empty;
  end;
end;

:: REGISTRATION 4: Non-empty sets are nontrivial
registration
  cluster non empty -> nontrivial for set;
  coherence
  proof
    let X be set;
    assume X is non empty;
    then X <> {};
    hence X is nontrivial by Def2;
  end;
end;

:: REGISTRATION 6: Nontrivial sets exist
:: This is harder - we'd need to show a specific non-empty set exists
:: Skipping for simplicity in this basic lesson

:: Now type inference works automatically!
theorem Th1:
  {} is trivial;

theorem Th2:
  for X being trivial set holds X is empty
proof
  let X be trivial set;
  thus thesis;  :: Follows from registration 3
end;

theorem Th3:
  for X being non empty set holds X is nontrivial
proof
  let X be non empty set;
  thus thesis;  :: Follows from registration 5
end;