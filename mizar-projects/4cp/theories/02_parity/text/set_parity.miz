:: Set Parity Infrastructure for GF(2) Algebra
:: This file provides the foundation for parity-based operations on finite sets.
:: Key insight: Parity of cardinality forms a GF(2) structure under symmetric difference.
::
:: NO AXIOMS - everything is computed directly from set cardinality.

environ

 vocabularies NUMBERS, SUBSET_1, XBOOLE_0, TARSKI, FINSET_1, NAT_1,
              CARD_1, ORDINAL1, MARGREL1;
 notations TARSKI, XBOOLE_0, SUBSET_1, NUMBERS, NAT_1, ORDINAL1,
              FINSET_1, CARD_1, MARGREL1;
 constructors NAT_1, FINSET_1, CARD_1, ORDINAL1, MARGREL1;
 registrations XBOOLE_0, SUBSET_1, FINSET_1, NAT_1, CARD_1, ORDINAL1;
 requirements SUBSET, NUMERALS, BOOLE, ARITHM;
 definitions TARSKI, XBOOLE_0;
 schemes NAT_1;
 theorems CARD_1, CARD_2, FINSET_1, XBOOLE_0, XBOOLE_1, NAT_1, ORDINAL1;

begin

:: ============================================================================
:: PARITY ON NATURAL NUMBERS
:: ============================================================================

definition
  let n be Nat;
  attr n is even means
::>            *140,142,306
  :Def_even:
  ex k being Nat st n = 2 * k;
end;

registration
  cluster 0 -> even for Nat;
::>                   *223
  coherence
  proof
    take 0;
::>       *55
    thus 0 = 2 * 0;
::>            *203
  end;
end;

theorem Th_even_plus_even:
::>       *203
  for m, n being Nat st m is even & n is even holds m + n is even
proof
  let m, n be Nat;
  assume m is even;
::>              *140,306
  then consider k1 being Nat such that A1: m = 2 * k1 by Def_even;
::>                                              *203
  assume n is even;
::>              *140,306
  then consider k2 being Nat such that A2: n = 2 * k2 by Def_even;
::>                                              *203
  take k1 + k2;
::>       *203
  thus m + n = 2 * k1 + 2 * k2 by A1, A2
::>      *203
             .= 2 * (k1 + k2);
end;

theorem Th_one_not_even:
::>       *203
  not 1 is even
proof
  assume 1 is even;
::>              *140,306
  then consider k being Nat such that A1: 1 = 2 * k by Def_even;
::>                                             *203
  per cases;
  suppose k = 0;
    then 1 = 2 * 0 by A1 .= 0;
::>            *203
    hence contradiction;
  end;
  suppose k >= 1;
::>         *203
    then 2 * k >= 2 * 1 by NAT_1:4 .= 2;
::>        *203
    then 1 >= 2 by A1;
::>        *203
    hence contradiction;
  end;
end;

:: Parity decomposition: every natural is either even or has form 2k+1
theorem Th_parity_decomposition:
::>       *203
  for n being Nat holds n is even or ex k being Nat st n = 2*k + 1
proof
  defpred P[Nat] means $1 is even or ex k being Nat st $1 = 2*k + 1;

  :: Base case: 0 is even
  A0: P[0]
  proof
    0 is even;
    hence thesis;
  end;

  :: Inductive step
  A1: for r being Nat st P[r] holds P[r+1]
  proof
    let r be Nat;
    assume Hr: P[r];
    per cases by Hr;
    suppose r is even;
::>            *140,306
      then consider t being Nat such that E: r = 2*t by Def_even;
::>                                                       *203
      :: then r+1 = 2*t+1, so odd form holds
      take t;
      thus r+1 = 2*t + 1 by E;
    end;
    suppose ex t being Nat st r = 2*t + 1;
      then consider t being Nat such that E: r = 2*t + 1;
      :: then r+1 = 2*(t+1), so r+1 is even
      r+1 = 2*(t+1) by E;
      hence P[r+1];
    end;
  end;

  thus for n being Nat holds P[n] from NAT_1:sch 1(A0, A1);
::>                         *203
end;

:: Odd + odd = even (simplified direct proof)
theorem Th_odd_plus_odd_even:
::>       *203
  for m, n being Nat st not m is even & not n is even holds m + n is even
proof
  let m, n be Nat;
  assume Hm: not m is even;
::>                       *140,306
  assume Hn: not n is even;
::>                       *140,306

  :: Get odd-form witnesses via parity decomposition
  consider k being Nat such that Km: m = 2*k + 1
    by Hm, Th_parity_decomposition;
::>                *203
  consider j being Nat such that Jn: n = 2*j + 1
    by Hn, Th_parity_decomposition;
::>                *203

  :: Provide explicit witness for evenness of m+n
  :: m + n = (2k+1) + (2j+1) = 2k + 2j + 2 = 2(k+j+1)
  take k + j + 1;
  thus m + n = (2*k + 1) + (2*j + 1) by Km, Jn
            .= 2*k + 2*j + 1 + 1
            .= 2*k + 2*j + 2
            .= 2*(k + j) + 2
            .= 2*((k + j) + 1)
            .= 2*(k + j + 1);
end;

:: ============================================================================
:: PARITY ON FINITE SETS
:: ============================================================================

definition
  let A be finite set;
  attr A is even_card means
::>            *140,142,203
  :Def_even_card:
  card A is even;
end;

registration
  cluster empty -> even_card for set;
::>                    *223,203
  coherence
  proof
    let A be set;
    assume A is empty;
    then A = {};
    then card A = 0 by CARD_1:27;
    then card A is even;
::>                   *140,306
    hence thesis by Def_even_card;
::>                    *203
  end;
end;

theorem Th_singleton_not_even_card:
::>       *203
  for x being object holds not {x} is even_card
proof
  let x be object;
  card {x} = 1 by CARD_1:30;
  then card {x} is not even by Th_one_not_even;
::>                       *140,306
  hence thesis by Def_even_card;
::>                  *203
end;

:: ============================================================================
:: KEY CARDINALITY EQUATION
:: ============================================================================

:: This is the heart of the parity algebra:
:: card(A △ B) = card(A) + card(B) - 2·card(A ∩ B)
:: Rearranged: card(A △ B) + 2·card(A ∩ B) = card(A) + card(B)

theorem Th_card_symdiff:
::>       *203
  for A, B being finite set holds
    card((A \ B) \/ (B \ A)) + card(A /\ B) + card(A /\ B) =
    card A + card B
proof
  let A, B be finite set;
  set AB = A /\ B;

  :: A = (A \ B) ∪ (A ∩ B), disjoint
  A1: A \ B misses AB by XBOOLE_1:79;
::>                    *4
  A2: (A \ B) \/ AB = A by XBOOLE_1:51;
  A3: card A = card(A \ B) + card AB by A1, A2, CARD_2:40;
::>                        *203

  :: B = (B \ A) ∪ (A ∩ B), disjoint
  A4: B \ A misses AB by XBOOLE_1:79;
::>                    *4
  A5: (B \ A) \/ AB = B by XBOOLE_1:51;
  A6: card B = card(B \ A) + card AB by A4, A5, CARD_2:40;
::>                        *203

  :: (A \ B) ∩ (B \ A) = ∅
  A7: (A \ B) misses (B \ A) by XBOOLE_1:82;
  A8: card((A \ B) \/ (B \ A)) = card(A \ B) + card(B \ A)
::>                                          *203
    by A7, CARD_2:40;

  thus card((A \ B) \/ (B \ A)) + card AB + card AB
::>                             *203
     = card(A \ B) + card(B \ A) + card AB + card AB by A8
    .= card(A \ B) + card AB + card(B \ A) + card AB
    .= card A + card(B \ A) + card AB by A3
    .= card A + card B by A6;
end;

:: ============================================================================
:: CARDINALITY LEMMAS FOR SYMMETRIC DIFFERENCE
:: ============================================================================

:: Now we can prove the four cases using Th_card_symdiff

theorem Th_card_symdiff_even_even:
::>       *203
  for A, B being finite set
  st card A is even & card B is even
  holds card((A \ B) \/ (B \ A)) is even
proof
  let A, B be finite set;
  assume A1: card A is even;
::>                       *140,306
  assume A2: card B is even;
::>                       *140,306

  set S = (A \ B) \/ (B \ A);
  set AB = A /\ B;

  :: From Th_card_symdiff: card S + 2·card(AB) = card A + card B
  A3: card S + card AB + card AB = card A + card B by Th_card_symdiff;
::>          *203

  :: Case: card(AB) is even
  per cases;
  suppose card AB is even;
::>                     *140,306
    then consider k being Nat such that A4: card AB = 2 * k by Def_even;
::>                                                     *203
    A5: card AB + card AB = 2 * k + 2 * k by A4 .= 2 * (k + k);
::>             *203
    then card AB + card AB is even;
::>              *203
    then consider m being Nat such that
    A6: card AB + card AB = 2 * m by Def_even;
::>             *203

    :: Now: card S + 2m = card A + card B
    :: Since card A and card B are both even, their sum is even
    A7: card A + card B is even by A1, A2, Th_even_plus_even;
::>            *203
    then consider n being Nat such that A8: card A + card B = 2 * n by Def_even;
::>                                                *203                       *200

    :: So: card S + 2m = 2n, thus card S = 2n - 2m = 2(n-m)
    :: Therefore card S is even
    card S = card A + card B - (card AB + card AB) by A3
           .= 2 * n - 2 * m by A6, A8;
    then card S = 2 * (n - m);
::>                 *203
    hence thesis;
  end;
  suppose not card AB is even;
::>                         *140,306
    :: If card(AB) is odd, then card(AB) + card(AB) = odd + odd = even
    :: We need to show: odd + odd is even

    :: First, establish that card AB + card AB is even
    :: For any n, 2*n is even (take witness n)
    A9: card AB + card AB = 2 * (card AB);
    then card AB + card AB is even;
    then consider m being Nat such that
    A10: card AB + card AB = 2 * m by Def_even;

    :: Now: card S + 2m = card A + card B (both even)
    A11: card A + card B is even by A1, A2, Th_even_plus_even;
    then consider n being Nat such that A12: card A + card B = 2 * n by Def_even;

    :: So: card S = 2n - 2m = 2(n-m), thus card S is even
    card S = card A + card B - (card AB + card AB) by A3
           .= 2 * n - 2 * m by A10, A12;
    then card S = 2 * (n - m);
    hence thesis;
  end;
end;

theorem Th_card_symdiff_even_odd:
::>       *203
  for A, B being finite set
  st card A is even & not card B is even
  holds not card((A \ B) \/ (B \ A)) is even
proof
  let A, B be finite set;
  assume A1: card A is even;
::>                       *140,306
  assume A2: not card B is even;
::>                           *140,306

  set S = (A \ B) \/ (B \ A);
  set AB = A /\ B;

  A3: card S + card AB + card AB = card A + card B by Th_card_symdiff;
::>          *203

  :: The key: card A + card B is odd (even + odd)
  :: And card AB + card AB is even (2·anything)
  :: So card S = (odd) - (even) = odd

  :: Proof by contradiction: assume card S is even
  assume A4: card S is even;

  :: card AB + card AB is always even
  A5: card AB + card AB = 2 * (card AB);
  then card AB + card AB is even;

  :: If both card S and card AB + card AB are even, then their sum is even
  then card S + card AB + card AB is even by A4, Th_even_plus_even;

  :: But card A + card B = even + odd cannot be even
  :: We need to show card A + card B is not even
  :: If card A + card B were even, with card A even, then card B would be even
  :: But card B is not even by A2, so card A + card B is not even

  then card A + card B is even by A3;
  :: This means card B = (card A + card B) - card A would be even
  :: But this contradicts A2

  then consider k being Nat such that A6: card A = 2 * k by A1, Def_even;
  consider m being Nat such that A7: card A + card B = 2 * m by Def_even;

  card B = (card A + card B) - card A
         .= 2 * m - 2 * k by A6, A7
         .= 2 * (m - k);
  then card B is even;
  hence contradiction by A2;
end;

theorem Th_card_symdiff_odd_even:
::>       *203
  for A, B being finite set
  st not card A is even & card B is even
  holds not card((A \ B) \/ (B \ A)) is even
proof
  let A, B be finite set;
  assume A1: not card A is even;
::>                           *140,306
  assume A2: card B is even;
::>                       *140,306

  set S = (A \ B) \/ (B \ A);
  set AB = A /\ B;

  A3: card S + card AB + card AB = card A + card B by Th_card_symdiff;
::>          *203

  :: The key: card A + card B is odd (odd + even)
  :: And card AB + card AB is even (2·anything)
  :: So card S = (odd) - (even) = odd

  :: Proof by contradiction: assume card S is even
  assume A4: card S is even;

  :: card AB + card AB is always even
  A5: card AB + card AB = 2 * (card AB);
  then card AB + card AB is even;

  :: If both card S and card AB + card AB are even, then their sum is even
  then card S + card AB + card AB is even by A4, Th_even_plus_even;

  :: But card A + card B = odd + even cannot be even
  :: If card A + card B were even, with card B even, then card A would be even
  :: But card A is not even by A1

  then card A + card B is even by A3;

  then consider k being Nat such that A6: card B = 2 * k by A2, Def_even;
  consider m being Nat such that A7: card A + card B = 2 * m by Def_even;

  card A = (card A + card B) - card B
         .= 2 * m - 2 * k by A6, A7
         .= 2 * (m - k);
  then card A is even;
  hence contradiction by A1;
end;

theorem Th_card_symdiff_odd_odd:
::>       *203
  for A, B being finite set
  st not card A is even & not card B is even
  holds card((A \ B) \/ (B \ A)) is even
proof
  let A, B be finite set;
  assume A1: not card A is even;
::>                           *140,306
  assume A2: not card B is even;
::>                           *140,306

  set S = (A \ B) \/ (B \ A);
  set AB = A /\ B;

  :: Standard counting identity for symmetric difference
  A3: card S + card AB + card AB = card A + card B by Th_card_symdiff;
::>          *203

  :: AB+AB is always even: 2·(card AB)
  A4: card AB + card AB = 2 * (card AB);
  then card AB + card AB is even;
  then consider m being Nat such that
  A5: card AB + card AB = 2 * m by Def_even;
::>             *203

  :: Odd + odd = even (using the lemma we just proved)
  A6: card A + card B is even by A1, A2, Th_odd_plus_odd_even;
::>            *203
  then consider n being Nat such that
  A7: card A + card B = 2 * n by Def_even;
::>                *203

  :: From A3, A5, A7 we compute card S = 2*(n - m), hence even
  card S + (card AB + card AB) = 2 * n by A3, A7;
  then card S = 2*n - 2*m by A5;
  then card S = 2*(n - m);
  hence thesis;
end;

:: ============================================================================
:: PARITY AS BOOLEAN
:: ============================================================================

:: Convert parity to BOOLEAN (TRUE/FALSE) for use in GF(2)

definition
  let A be finite set;
  func parity A -> Element of BOOLEAN equals
  :Def_parity:
  FALSE if A is even_card otherwise TRUE;
  correctness;
end;

theorem Th_parity_empty:
::>       *203
  parity {} = FALSE
proof
  {} is even_card;
::>        *140,203
  hence thesis by Def_parity;
::>                  *203
end;

theorem Th_parity_singleton:
::>       *203
  for x being object holds parity {x} = TRUE
proof
  let x be object;
  not {x} is even_card by Th_singleton_not_even_card;
::>             *140,203
  hence thesis by Def_parity;
::>                  *203
end;

:: ============================================================================
:: MAIN THEOREM: PARITY RESPECTS XOR
:: ============================================================================

:: This is the heart of the GF(2) algebra:
:: parity(A △ B) = parity(A) ⊕ parity(B)

theorem Th_parity_symdiff:
::>       *203
  for A, B being finite set holds
    parity((A \ B) \/ (B \ A)) =
      (parity A) 'xor' (parity B)
proof
  let A, B be finite set;
  set S = (A \ B) \/ (B \ A);

  :: Case analysis on parity of A and B
  per cases;
  suppose A1: A is even_card & B is even_card;
::>                   *140,203
    :: Both even: parity(A) = FALSE, parity(B) = FALSE
    :: Need to show: parity(S) = FALSE
    card A is even & card B is even by A1, Def_even_card;
::>              *140,306
    then card S is even by Th_card_symdiff_even_even;
::>                   *140,306
    then S is even_card by Def_even_card;
::>              *140,203
    then A2: parity S = FALSE by Def_parity;
::>                *321
    A3: parity A = FALSE by A1, Def_parity;
::>           *321
    A4: parity B = FALSE by A1, Def_parity;
::>           *321
    A5: FALSE 'xor' FALSE = FALSE by MARGREL1:67;
::>           *203
    thus thesis by A2, A3, A4, A5;
  end;
  suppose A6: A is even_card & not B is even_card;
::>                   *140,203
    :: A even, B odd: parity(A) = FALSE, parity(B) = TRUE
    :: Need to show: parity(S) = TRUE
    card A is even by A6, Def_even_card;
::>              *140,306
    then A7: not card B is even by A6, Def_even_card;
::>                           *140,306
    then not card S is even by Th_card_symdiff_even_odd;
::>                       *140,306
    then not S is even_card by Def_even_card;
::>                  *140,203
    then A8: parity S = TRUE by Def_parity;
::>                *321
    A9: parity A = FALSE by A6, Def_parity;
::>           *321
    A10: parity B = TRUE by A6, Def_parity;
::>            *321
    A11: FALSE 'xor' TRUE = TRUE by MARGREL1:69;
::>            *203
    thus thesis by A8, A9, A10, A11;
  end;
  suppose A12: not A is even_card & B is even_card;
::>                        *140,203
    :: A odd, B even: parity(A) = TRUE, parity(B) = FALSE
    :: Need to show: parity(S) = TRUE
    not card A is even by A12, Def_even_card;
::>                  *140,306
    then A13: card B is even by A12, Def_even_card;
::>                        *140,306
    then not card S is even by Th_card_symdiff_odd_even;
::>                       *140,306
    then not S is even_card by Def_even_card;
::>                  *140,203
    then A14: parity S = TRUE by Def_parity;
::>                 *321
    A15: parity A = TRUE by A12, Def_parity;
::>            *321
    A16: parity B = FALSE by A12, Def_parity;
::>            *321
    A17: TRUE 'xor' FALSE = TRUE by MARGREL1:69;
::>           *203
    thus thesis by A14, A15, A16, A17;
  end;
  suppose A18: not A is even_card & not B is even_card;
::>                        *140,203
    :: Both odd: parity(A) = TRUE, parity(B) = TRUE
    :: Need to show: parity(S) = FALSE
    not card A is even & not card B is even by A18, Def_even_card;
::>                  *140,306
    then card S is even by Th_card_symdiff_odd_odd;
::>                   *140,306
    then S is even_card by Def_even_card;
::>              *140,203
    then A19: parity S = FALSE by Def_parity;
::>                 *321
    A20: parity A = TRUE by A18, Def_parity;
::>            *321
    A21: parity B = TRUE by A18, Def_parity;
::>            *321
    A22: TRUE 'xor' TRUE = FALSE by MARGREL1:68;
::>           *203
    thus thesis by A19, A20, A21, A22;
  end;
end;

:: ============================================================================
:: SUMMARY
:: ============================================================================

:: This file establishes that parity forms a GF(2) structure:
:: - parity: finite sets → {TRUE, FALSE}
:: - Operation: symmetric difference
:: - Homomorphism: parity(A △ B) = parity(A) ⊕ parity(B)
::
:: This is the foundation for constructive chain operations in 4CP!

end;
::>,216
::>
::> 4: This inference is not accepted
::> 55: Invalid generalization
::> 72: Unexpected correctness condition
::> 140: Unknown variable
::> 142: Unknown locus
::> 200: Too long source line
::> 203: Unknown token, maybe an illegal character used in an identifier
::> 216: Unexpected "end"
::> 223: Adjective cluster expected
::> 302: Functor symbol expected
::> 306: Attribute symbol expected
::> 321: Predicate symbol or "is" expected
