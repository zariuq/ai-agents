:: M5.2: Face boundary sequence (edge-sets â†’ chains)
:: Constructs chain sequence from edge sets using indicator functor

environ

vocabularies
  FACEBDRY, CHAINDOT, XBOOLE_0, SUBSET_1, ZFMISC_1, MARGREL1,
  GLIB_000, GLIB_001, GLIB_002, TARSKI, FUNCT_1, FUNCT_2,
  RELAT_1, FINSET_1, CARD_1, FINSEQ_1, NAT_1, NUMBERS;
notations
  TARSKI, XBOOLE_0, SUBSET_1, ZFMISC_1, MARGREL1,
  GLIB_000, GLIB_001, GLIB_002, FUNCT_1, FUNCT_2, RELAT_1,
  FINSET_1, CARD_1, FINSEQ_1, NAT_1;
constructors
  SUBSET_1, ZFMISC_1, MARGREL1,
  GLIB_000, GLIB_001, GLIB_002, FUNCT_1, FUNCT_2,
  FINSET_1, CARD_1, FINSEQ_1, NAT_1;
registrations
  MARGREL1,
  GLIB_000, GLIB_001, GLIB_002, FUNCT_1, FUNCT_2,
  FINSET_1, CARD_1, FINSEQ_1, XBOOLE_0, SUBSET_1, NAT_1;
requirements
  SUBSET, BOOLE, NUMERALS;
theorems
  FINSEQ_1, FUNCT_1;

begin

reserve G for _Graph;
reserve S for FinSequence of bool the_Edges_of G;
reserve c for Element of GF2_squared;

definition
  let G be _Graph, S be FinSequence of bool the_Edges_of G, c be Element of GF2_squared;
  func face_boundary_seq(G, S, c) -> FinSequence of Chains(G) means
  :Def_face_boundary_seq:
  len it = len S &
  for i being Nat st i in dom S holds it.i = indicator_color(G, S.i, c);
  existence
  proof
    set n = len S;
    defpred P[object,object] means
      ex i being Nat st $1 = i & i in dom S & $2 = indicator_color(G, S.i, c);
A0: for x being object st x in Seg n
    ex y being object st P[x,y]
    proof
      let x be object; assume x in Seg n; then reconsider i = x as Nat;
      take indicator_color(G, S.i, c);
      take i;
      thus x = i;
      thus i in dom S by FINSEQ_1:def 3;
      thus indicator_color(G, S.i, c) = indicator_color(G, S.i, c);
    end;
    consider f being Function such that
A1: dom f = Seg n &
    for x being object st x in Seg n holds P[x,f.x] from FUNCT_1:sch 1(A0);
    rng f c= Chains(G)
    proof
      let y be object; assume y in rng f;
      then consider x being object such that
B1:    x in dom f & y = f.x by FUNCT_1:def 3;
      consider i being Nat such that
B2:    x = i & i in dom S & f.x = indicator_color(G, S.i, c) by A1, B1;
      thus y in Chains(G) by B1, B2;
    end;
    then reconsider p = f as FinSequence of Chains(G) by A1, FINSEQ_1:def 2;
    take p; thus len p = len S by A1, FINSEQ_1:def 3;
    let i be Nat; assume i in dom S;
    then i in Seg n by FINSEQ_1:def 3;
    then consider j being Nat such that
C1: i = j & j in dom S & p.i = indicator_color(G, S.j, c) by A1;
    thus thesis by C1;
  end;
  uniqueness
  proof
    let p1,p2 be FinSequence of Chains(G) such that
B1: len p1 = len S & (for i being Nat st i in dom S holds p1.i = indicator_color(G, S.i, c)) and
B2: len p2 = len S & (for i being Nat st i in dom S holds p2.i = indicator_color(G, S.i, c));
    for i being Nat st i in dom S holds p1.i = p2.i
    proof
      let i be Nat; assume i in dom S;
      hence p1.i = indicator_color(G, S.i, c) by B1
                 .= p2.i by B2;
    end;
    hence p1 = p2 by B1,B2, FINSEQ_1:14;
  end;
end;

end;
