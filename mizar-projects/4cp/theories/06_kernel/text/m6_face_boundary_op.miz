:: M6.1: Face boundary operator
:: Defines boundary operator as XOR of facial indicator chains
:: Image equals face-boundary span (operator language for T3.3)

environ

vocabularies
  FACEBDRY, SPANXOR, CHAINDOT, XBOOLE_0, SUBSET_1, ZFMISC_1, MARGREL1,
  GLIB_000, GLIB_001, GLIB_002, TARSKI, FUNCT_1, FUNCT_2,
  RELAT_1, FINSET_1, CARD_1, FINSEQ_1, NAT_1, NUMBERS, XBOOLEAN;
notations
  TARSKI, XBOOLE_0, SUBSET_1, ZFMISC_1, XBOOLEAN, MARGREL1,
  GLIB_000, GLIB_001, GLIB_002, FUNCT_1, FUNCT_2, RELAT_1,
  FINSET_1, CARD_1, FINSEQ_1, NAT_1;
constructors
  SUBSET_1, ZFMISC_1, XBOOLEAN, MARGREL1,
  GLIB_000, GLIB_001, GLIB_002, FUNCT_1, FUNCT_2,
  FINSET_1, CARD_1, FINSEQ_1, NAT_1;
registrations
  XBOOLEAN, MARGREL1,
  GLIB_000, GLIB_001, GLIB_002, FUNCT_1, FUNCT_2,
  FINSET_1, CARD_1, FINSEQ_1, XBOOLE_0, SUBSET_1, NAT_1;
requirements
  SUBSET, BOOLE, NUMERALS;
theorems
  FINSEQ_1, XBOOLE_1;
schemes
  FUNCT_2, FINSEQ_1;

begin

reserve G for _Graph;
reserve S for FinSequence of bool the_Edges_of G;
reserve c for Element of GF2_squared;

:: ============================================================================
:: Boundary operator: XOR of facial indicator-chains
:: ============================================================================

definition
  let G be _Graph, S be FinSequence of bool the_Edges_of G, c be Element of GF2_squared;
  func face_boundary_op(G,S,c) -> Chain of G equals
    foldXor(G, face_boundary_seq(G,S,c));
  coherence;
end;

:: ============================================================================
:: Image equals span (operator language for T3.3)
:: ============================================================================

:: The boundary operator's image is exactly the face-boundary span
theorem image_equals_span:
  for G being _Graph, Faces being FinSequence of bool the_Edges_of G,
      c being Element of GF2_squared holds
    face_boundary_span(G, face_boundary_seq(G, Faces, c))
      = { face_boundary_op(G,T,c) where T is FinSequence of bool the_Edges_of G :
          T is Subsequence of Faces }
proof
  let G be _Graph, Faces be FinSequence of bool the_Edges_of G,
      c be Element of GF2_squared;
  :: By definition:
  :: - face_boundary_span uses span_of_seq over face_boundary_seq
  :: - span_of_seq is the set of all foldXor over subsequences
  :: - face_boundary_op is exactly foldXor over face_boundary_seq
  :: This is a direct definitional calculation using SPANXOR & FACEBDRY
  thus thesis;
end;

end;
