:: Example: Using RESERVE to clean up code

environ
 vocabularies NUMBERS, SUBSET_1, XBOOLE_0, TARSKI;
 notations TARSKI, XBOOLE_0, SUBSET_1;
 constructors TARSKI, XBOOLE_0, SUBSET_1;
 registrations XBOOLE_0, SUBSET_1;
 requirements SUBSET;
 theorems XBOOLE_0, XBOOLE_1, TARSKI;

begin

:: ============================================================================
:: WITHOUT RESERVE (Verbose!)
:: ============================================================================

theorem Th_verbose_1:
  for A, B being set
  for x, y being object
  st x in A & y in B
  holds x in A \/ B & y in A \/ B
proof
  let A, B be set;
  let x, y be object;
  assume x in A & y in B;
  hence thesis by XBOOLE_0:def 3;
end;

theorem Th_verbose_2:
  for A, B, C being set
  for x being object
  st x in A \/ B
  holds x in A or x in B
proof
  let A, B, C be set;
  let x be object;
  assume x in A \/ B;
  hence thesis by XBOOLE_0:def 3;
end;

:: ============================================================================
:: WITH RESERVE (Clean!)
:: ============================================================================

reserve A, B, C for set,
        x, y, z for object;

theorem Th_clean_1:
  x in A & y in B implies x in A \/ B & y in A \/ B
proof
  assume x in A & y in B;
  hence thesis by XBOOLE_0:def 3;
end;

theorem Th_clean_2:
  x in A \/ B implies x in A or x in B
proof
  assume x in A \/ B;
  hence thesis by XBOOLE_0:def 3;
end;

:: Notice: No more "let A, B be set; let x be object;"!
:: Mizar automatically knows:
:: - A, B, C are sets (from reserve)
:: - x, y, z are objects (from reserve)

:: ============================================================================
:: WHEN RESERVE DOESN'T APPLY
:: ============================================================================

theorem Th_special_case:
  for D being non empty set   :: D is special, not in reserve
  for a being Element of D    :: a depends on D
  holds a in D
proof
  let D be non empty set;
  let a be Element of D;
  thus thesis;
end;

end;
