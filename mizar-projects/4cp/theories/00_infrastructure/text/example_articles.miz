:: Example: Using ARTICLES to import from face_boundary.miz
:: NOTE: This is aspirational - would need face_boundary in MML first!

environ

 vocabularies NUMBERS, SUBSET_1, XBOOLE_0, TARSKI, RELAT_1, FUNCT_1,
      FINSET_1, NAT_1, GLIB_000, GLIB_001, GLIB_002,
      MARGREL1, MCART_1, FUNCOP_1,
      FACEBDRY;  :: ← Our custom vocabulary!

 notations TARSKI, XBOOLE_0, SUBSET_1, NUMBERS, NAT_1,
      FINSET_1, RELAT_1, FUNCT_1, FUNCT_2, GLIB_000, GLIB_001,
      GLIB_002, MARGREL1, MCART_1, FUNCOP_1,
      FACEBDRY;  :: ← Import notation from face_boundary

 constructors NAT_1, FINSET_1, GLIB_000, GLIB_001, GLIB_002,
      MCART_1, FUNCOP_1, MARGREL1,
      FACEBDRY;  :: ← Import constructors

 registrations XBOOLE_0, SUBSET_1, FINSET_1, NAT_1, RELAT_1,
      GLIB_000, GLIB_001, GLIB_002, FUNCT_1, FUNCT_2,
      FACEBDRY;  :: ← Import registrations

 requirements SUBSET, NUMERALS;

 theorems XBOOLE_0, TARSKI, FUNCT_1, FUNCT_2, GLIB_000,
      MARGREL1, MCART_1, FUNCOP_1,
      FACEBDRY;  :: ← Import theorems from face_boundary

 :: THE KEY LINE:
 articles FACEBDRY;  :: ← Makes definitions from face_boundary.miz available!

begin

:: ============================================================================
:: NOW WE CAN USE THINGS DEFINED IN FACE_BOUNDARY.MIZ
:: ============================================================================

reserve G for _Graph,
        c for Element of GF2_squared,       :: ← From face_boundary.miz!
        y for Chain of G;                   :: ← From face_boundary.miz!

:: Example theorem using imported concepts
theorem
  for G being _Graph
  holds zero_chain(G) is Chain of G     :: ← zero_chain from face_boundary.miz!
proof
  let G be _Graph;
  :: zero_chain(G) is defined as (the_Edges_of G) --> zero_color
  :: in face_boundary.miz, so we can use that definition here
  thus thesis;
end;

:: Example using GF2_squared from face_boundary.miz
theorem
  for c being Element of GF2_squared    :: ← From face_boundary.miz!
  holds c`1 in BOOLEAN & c`2 in BOOLEAN
proof
  let c be Element of GF2_squared;
  :: GF2_squared = [: BOOLEAN, BOOLEAN :] from face_boundary.miz
  hence thesis by MCART_1:10;
end;

:: ============================================================================
:: WHY THIS IS POWERFUL
:: ============================================================================

:: WITHOUT articles:
:: - Would have to re-define GF2_squared, Chain, zero_chain, etc.
:: - 100+ lines of duplication!
:: - Risk of inconsistency

:: WITH articles:
:: - Import definitions once
:: - Reuse across multiple files
:: - Single source of truth
:: - Like "#include" in C or "import" in Python!

end;
