::Lesson 11: Environment Hygiene - REALISTIC FOR GRAPH THEORY
::
:: Goal: Demonstrate realistic environ for graph formalization
:: Key: Balance between minimal and sufficient dependencies
::
:: WHY THIS MATTERS FOR 4CP:
:: - Graph theory needs: sets, relations, functions, structures
:: - Too minimal: constant errors adding dependencies
:: - Too bloated: slow compilation, unclear dependencies
:: - Just right: fast compilation, clear intent

environ
 vocabularies LESSON11, XBOOLE_0, SUBSET_1, ZFMISC_1, FUNCT_1, RELAT_1,
      STRUCT_0;
 notations XBOOLE_0, SUBSET_1, ZFMISC_1, FUNCT_1, RELAT_1, STRUCT_0;
 constructors XBOOLE_0, SUBSET_1, ZFMISC_1, FUNCT_1, STRUCT_0;
 registrations XBOOLE_0, SUBSET_1, ZFMISC_1, FUNCT_1, RELAT_1, STRUCT_0;

begin

:: ====================
:: REALISTIC ENVIRON EXPLAINED
:: ====================
::
:: This environ is suitable for graph theory formalization:
::
:: 1. XBOOLE_0: Set operations (\/, /\, \, c=)
::    - Essential for ANY Mizar development
::    - Provides basic set theory
::
:: 2. SUBSET_1: Subsets and membership
::    - Vertex sets, edge sets
::    - Subset relations
::
:: 3. ZFMISC_1: Pairs and products
::    - Ordered pairs for edges
::    - Cartesian products
::
:: 4. FUNCT_1, RELAT_1: Functions and relations
::    - Incidence relations
::    - Source/Target functions (GRAPH_1 style)
::
:: 5. STRUCT_0: Basic structures
::    - 1-sorted, 2-sorted foundations
::    - Structure inheritance
::
:: COMPARISON:
:: - Minimal (Lesson 1-8): Just XBOOLE_0
:: - Realistic (This lesson): XBOOLE_0 + graph essentials
:: - Too Much: Adding FUNCT_2, NAT_1, FINSEQ_1 without using them

:: ====================
:: MINIMAL EXAMPLE
:: ====================

definition
  let X be set;
  attr X is graph-like means
::>             *140,142,203
  :Def1:
  X <> {};
end;

registration
  cluster {} -> non graph-like;
::>                     *140,203,223
  coherence by Def1;
::>               *144
end;

registration
  cluster graph-like for set;
::>     *73   *140,203      *223
  existence
::>       *72
  proof
    take {0};
::>       *140,152
    thus {0} <> {};
::>       *140,152
  end;
end;

theorem Th1:
  for X being graph-like set holds X <> {}
::>                *203
proof
  let X be graph-like set;
::>             *203
  X is graph-like;
::>        *140,203
  hence X <> {} by Def1;
end;

:: ====================
:: ENVIRON GUIDELINES FOR 4CP
:: ====================
::
:: START WITH THESE (Always needed):
:: - XBOOLE_0: Basic sets
:: - SUBSET_1: Subsets
:: - STRUCT_0: If using structures
::
:: ADD AS NEEDED:
:: - ZFMISC_1: If using pairs/products
:: - FUNCT_1/RELAT_1: If using functions/relations
:: - TARSKI: If using {x}, {x,y} notation
:: - NAT_1: If using natural numbers
:: - FINSET_1: If proving finiteness
::
:: AVOID UNTIL NECESSARY:
:: - FUNCT_2: Advanced function theory
:: - FINSEQ_1: Sequences (unless needed)
:: - ORDINAL1: Ordinals (rarely needed for graphs)
:: - CARD_1: Cardinality (unless counting)
::
:: ====================
:: COMPILATION-DRIVEN WORKFLOW
:: ====================
::
:: STEP 1: Start minimal
:: environ
::  vocabularies MYFILE, XBOOLE_0;
::  notations XBOOLE_0;
::  constructors XBOOLE_0;
::  registrations XBOOLE_0;
::
:: STEP 2: Compile and read errors
:: mizf text/myfile.miz
::
:: Error 101: Missing vocabulary X
::   -> Add X to vocabularies line
::
:: Error 110: Missing constructor Y
::   -> Add Y to constructors line
::
:: STEP 3: Add ONE dependency at a time
:: Don't bulk-add! Add what's needed, recompile.
::
:: STEP 4: After major refactoring
:: Run: irrvoc text/myfile.miz
:: Remove reported irrelevant vocabularies
::
:: ====================
:: REAL ENVIRON EXAMPLES FROM MML
:: ====================
::
:: GRAPH_1 environ (66 dependencies!):
::   vocabularies NUMBERS, SUBSET_1, STRUCT_0, FUNCT_1, GLIB_000,
::     XBOOLE_0, FUNCT_5, RELAT_1, PARTFUN1, RELAT_2, FINSET_1,
::     TREES_2, FINSEQ_1, XXREAL_0, ARYTM_3, TARSKI, CARD_1,
::     FUNCT_2, ZFMISC_1, GRAPH_1, RECDEF_2, NAT_1;
::
:: This is REALISTIC for production graph theory!
:: But we started simpler and grew organically.
::
:: ====================
:: ENVIRON FOR LESSON 12
:: ====================
::
:: Lesson 12 will import GRAPH_1, so it needs:
::
:: environ
::  vocabularies LESSON12, GRAPH_1, XBOOLE_0, SUBSET_1, STRUCT_0,
::       FUNCT_1, RELAT_1, ZFMISC_1;
::  notations XBOOLE_0, SUBSET_1, STRUCT_0, GRAPH_1;
::  constructors XBOOLE_0, SUBSET_1, STRUCT_0, GRAPH_1;
::  registrations XBOOLE_0, SUBSET_1, STRUCT_0, GRAPH_1;
::
:: This says: "I use GRAPH_1 and its dependencies"
::
:: ====================
:: KEY TAKEAWAYS
:: ====================
::
:: 1. MINIMAL START: Begin with XBOOLE_0 only
:: 2. COMPILE-DRIVEN: Let errors tell you what's missing
:: 3. INCREMENTAL: Add one dependency at a time
:: 4. REALISTIC: Graph theory needs ~7-10 core modules
:: 5. CLEANUP: Use irrvoc/irrths to remove cruft
:: 6. DOCUMENT: Comment why each dependency is needed
::
:: GOLDEN RULES:
:: - If you're not using it, don't include it
:: - If compiler needs it, add it immediately
:: - Don't cargo-cult large environs from other files
::
:: ====================
:: LESSON 12 PREVIEW
:: ====================
::
:: With this environ knowledge, Lesson 12 will:
:: 1. Import actual GRAPH_1 from MML
:: 2. Use MultiGraphStruct, dom, cod, etc.
:: 3. Prove real graph theory theorems
:: 4. Show how to build on MML infrastructure
::
:: This is where 4CP formalization truly begins!
::>
::> 72: Unexpected correctness condition
::> 73: Correctness condition missing
::> 140: Unknown variable
::> 142: Unknown locus
::> 144: Unknown label
::> 152: Unknown functor format
::> 203: Unknown token, maybe an illegal character used in an identifier
::> 223: Adjective cluster expected
